version: '3.8'

services:
  api:
    image: ${DOCKERHUB_USERNAME}/${DOCKERHUB_APP_ID}:prod
    environment:
      PORT: ${PORT}
      ENABLE_LOG: ${ENABLE_LOG}
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:5432/${DATABASE_NAME}
      DATABASE_SSL: ${DATABASE_SSL}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      VERIFICATION_TOKEN_SECRET: ${VERIFICATION_TOKEN_SECRET}
      ENABLE_EMAIL_VERIFICATION: ${ENABLE_EMAIL_VERIFICATION}
      MAILER_TOKEN: ${MAILER_TOKEN}
      MAILER_SENDER: ${MAILER_SENDER}
      WEB_VERIFICATOR_URL: ${WEB_VERIFICATOR_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      SHORT_URL_BASE: ${SHORT_URL_BASE}
    networks:
      - app
    depends_on:
      - database
    restart: unless-stopped

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:5432"
    networks:
      - app
    restart: unless-stopped

  webserver:    
    image: nginx:latest
    volumes:
      - ./docker/webserver/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "${DOCKER_PORT_HTTP}:80"
      - "${DOCKER_PORT_HTTPS}:443"
    networks:
      - app
    depends_on:
      - api
    restart: unless-stopped

networks:
  app:
    driver: bridge
    name: ${DOCKERHUB_APP_ID}.app
